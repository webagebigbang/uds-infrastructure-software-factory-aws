name: test-eks
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
    branches:
      - main
    paths:
      - 'eks/**.tf'
      - 'eks/**.go'

permissions:
  contents: write
  id-token: write

jobs:
  terraform-formatting:
    defaults:
      run:
        working-directory: './eks/'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}

      - uses: ./.github/actions/terraform-formatting

  terraform-scanning:
    defaults:
      run:
        working-directory: './eks/'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}

      - uses: ./.github/actions/terraform-scanning

  terraform-tests:
    runs-on: ubuntu-latest
    #if: steps.auto-commit-action.outputs.changes_detected == 'false'
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_COMMERCIAL_ROLE_TO_ASSUME }}
          role-session-name: ${{ github.event.client_payload.pull_request.head.sha || github.sha }}
          aws-region: us-west-2
          # 21600 seconds == 6 hours
          # 1800 seconds == 30 minutes
          role-duration-seconds: 3600
      # terraform fmt, tf validate, tflint, chekov
      - name: Run Common Terraform Tests
        uses: defenseunicorns/uds-common-workflows/.github/actions/terraform-test@main
        with:
          test_retry: 1
          test_dir: ./eks/test
        env:
          BACKEND_BUCKET: ${{ vars.BACKEND_BUCKET }}
          BACKEND_KEY: ${{ vars.BACKEND_KEY }}vpc.tfstate
          BACKEND_REGION: ${{ vars.BACKEND_REGION }}
          BACKEND_DYNAMODB_TABLE: ${{ vars.BACKEND_DYNAMODB_TABLE }}
          REGION: ${{ vars.REGION }}
          VPC_ID: ${{ vars.VPC_ID }}
          IAM_ROLE_PERMISSIONS_BOUNDARY: ${{ vars.FLOW_LOG_PERMISSION_BOUNDARY }}
          CLUSTER_SUBNETS: ${{ vars.CLUSTER_SUBNETS }}
          CIDR_BLOCKS: ${{ vars.CIDR_BLOCKS }}
          CLUSTER_CNI_SUBNETS: ${{ vars.CLUSTER_CNI_SUBNETS }}
